user {{ .Service.User }};
#worker_processes auto;
pid {{ .Service.RunDir }}/nginx.pid;
daemon off;

error_log /dev/stderr;

{{ range $name, $value := .Parameters.GetObject "global_directives" }}
{{ $name }} {{ $value.ToString }};
{{ end }}

events {
    worker_connections {{ .Parameters.GetString "worker_connections" }};
}

http {
    log_format wst '"$request" $status';

    error_log /dev/stderr;
    access_log /dev/stdout wst;

    {{ range $name, $value := .Parameters.GetObject "http_directives" }}
    {{ $name }} {{ $value.ToString }};
    {{ end }}

    server {
        listen       {{ .Service.Address }} default_server;
        server_name  _;
        server_name  _;
        root         {{ .Service.ScriptDir }};

        {{ range $name, $value := .Parameters.GetObject "server_directives" }}
        {{ $name }} {{ $value.ToString }};
        {{ end }}

        location / {
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            fastcgi_pass {{ (.Services.Find (.Parameters.GetString  "dest_service")).Address }};
            include fastcgi_params;

            {{ range $name, $value := .Parameters.GetObject "root_location_directives" }}
            {{ $name }} {{ $value.ToString }};
            {{ end }}
        }

        {{ range $match, $directives := .Parameters.GetObject "extra_locations" }}
        location $match {
            {{ range $name, $value := $directives.ToObject }}
            {{ $name }} {{ $value.ToString }};
            {{ end }}
        }
        {{ end }}
    }
}
